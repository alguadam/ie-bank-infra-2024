{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.31.92.45157",
      "templateHash": "3446901320651029764"
    }
  },
  "parameters": {
    "environmentType": {
      "type": "string",
      "defaultValue": "dev",
      "allowedValues": [
        "dev",
        "uat",
        "prod"
      ],
      "metadata": {
        "description": "The environment type"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "postgresSQLServerName": {
      "type": "string",
      "minLength": 3,
      "maxLength": 24
    },
    "postgresSQLDatabaseName": {
      "type": "string",
      "minLength": 3,
      "maxLength": 24
    },
    "appServicePlanName": {
      "type": "string",
      "minLength": 3,
      "maxLength": 24
    },
    "appServiceAppName": {
      "type": "string",
      "minLength": 3,
      "maxLength": 24
    },
    "appServiceAPIAppName": {
      "type": "string",
      "minLength": 3,
      "maxLength": 24
    },
    "appServiceAPIDBHostFLASK_APP": {
      "type": "string"
    },
    "appServiceAPIEnvVarENV": {
      "type": "string"
    },
    "appServiceAPIDBHostFLASK_DEBUG": {
      "type": "string"
    },
    "appServiceAPIEnvVarDBHOST": {
      "type": "string"
    },
    "appServiceAPIEnvVarDBNAME": {
      "type": "string"
    },
    "appServiceAPIDBHostDBUSER": {
      "type": "string"
    },
    "appServiceAPIEnvVarDBPASS": {
      "type": "securestring"
    },
    "containerRegistryName": {
      "type": "string"
    },
    "dockerRegistryImageName": {
      "type": "string"
    },
    "dockerRegistryImageTag": {
      "type": "string"
    },
    "appInsightsName": {
      "type": "string"
    },
    "logAnalyticsWorkspaceName": {
      "type": "string"
    },
    "keyVaultName": {
      "type": "string"
    },
    "keyVaultRoleAssignments": {
      "type": "array",
      "defaultValue": []
    },
    "keyVaultSecretNameAdminUsername": {
      "type": "string"
    },
    "keyVaultSecretNameAdminPassword0": {
      "type": "string"
    },
    "keyVaultSecretNameAdminPassword1": {
      "type": "string"
    }
  },
  "variables": {
    "logAnalyticsWorkspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('logAnalytics-{0}', parameters('environmentType'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "workspaceName": {
            "value": "[parameters('logAnalyticsWorkspaceName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.31.92.45157",
              "templateHash": "12190349593537350134"
            }
          },
          "parameters": {
            "workspaceName": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            }
          },
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2021-06-01",
              "name": "[parameters('workspaceName')]",
              "location": "[parameters('location')]",
              "properties": {
                "sku": {
                  "name": "PerGB2018"
                },
                "retentionInDays": 30
              }
            }
          ],
          "outputs": {
            "workspaceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaceName'))]"
            },
            "logAnalyticsWorkspaceName": {
              "type": "string",
              "value": "[parameters('workspaceName')]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('appInsights-{0}', parameters('environmentType'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "appInsightsName": {
            "value": "[parameters('appInsightsName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "logAnalyticsWorkspaceId": {
            "value": "[variables('logAnalyticsWorkspaceId')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.31.92.45157",
              "templateHash": "9525086094266397791"
            }
          },
          "parameters": {
            "appInsightsName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "logAnalyticsWorkspaceId": {
              "type": "string"
            },
            "applicationType": {
              "type": "string",
              "defaultValue": "web",
              "allowedValues": [
                "web",
                "other"
              ]
            }
          },
          "resources": [
            {
              "type": "Microsoft.Insights/components",
              "apiVersion": "2020-02-02",
              "name": "[parameters('appInsightsName')]",
              "location": "[parameters('location')]",
              "kind": "[parameters('applicationType')]",
              "properties": {
                "Application_Type": "[parameters('applicationType')]",
                "WorkspaceResourceId": "[parameters('logAnalyticsWorkspaceId')]"
              }
            }
          ],
          "outputs": {
            "appInsightsInstrumentationKey": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName')), '2020-02-02').InstrumentationKey]"
            },
            "appInsightsConnectionString": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName')), '2020-02-02').ConnectionString]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', format('logAnalytics-{0}', parameters('environmentType')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('keyVault-{0}', parameters('environmentType'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "keyVaultName": {
            "value": "[parameters('keyVaultName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "environmentType": {
            "value": "[parameters('environmentType')]"
          },
          "roleAssignments": {
            "value": "[parameters('keyVaultRoleAssignments')]"
          },
          "logAnalyticsWorkspaceId": {
            "value": "[variables('logAnalyticsWorkspaceId')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.31.92.45157",
              "templateHash": "10357402322771035323"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "keyVaultName": {
              "type": "string",
              "defaultValue": "[format('anna-kv{0}', uniqueString(resourceGroup().id))]"
            },
            "enableVaultForDeployment": {
              "type": "bool",
              "defaultValue": true
            },
            "logAnalyticsWorkspaceId": {
              "type": "string"
            },
            "diagnosticSettingName": {
              "type": "string",
              "defaultValue": "myDiagnosticSetting"
            },
            "roleAssignments": {
              "type": "array",
              "defaultValue": []
            },
            "environmentType": {
              "type": "string",
              "allowedValues": [
                "dev",
                "uat",
                "prod"
              ]
            }
          },
          "variables": {
            "keyVaultSku": "standard",
            "builtInRoleNames": {
              "Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
              "Key Vault Administrator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '00482a5a-887f-4fb3-b363-3b7fe8e74483')]",
              "Key Vault Certificates Officer": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'a4417e6f-fecd-4de8-b567-7b0420556985')]",
              "Key Vault Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'f25e0fa2-a7c8-4377-a976-54943a77a395')]",
              "Key Vault Crypto Officer": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '14b46e9e-c2b7-41b4-b07b-48a6ebf60603')]",
              "Key Vault Crypto Service Encryption User": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'e147488a-f6f5-4113-8e2d-b22465e65bf6')]",
              "Key Vault Crypto User": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '12338af0-0e69-4776-bea7-57ae8d297424')]",
              "Key Vault Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '21090545-7ca7-4776-b22c-e363652d74d2')]",
              "Key Vault Secrets Officer": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b86a8fe4-44ce-4948-aee5-eccb2c155cd7')]",
              "Key Vault Secrets User": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4633458b-17de-408a-b874-0445c86b69e6')]",
              "Owner": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]",
              "Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
              "Role Based Access Control Administrator (Preview)": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'f58310d9-a9f6-439a-9e8d-f62e7b41a168')]",
              "User Access Administrator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '18d7d88d-d35e-4fb5-a5c3-7773c20a72d9')]"
            },
            "accessPolicies": "[if(equals(parameters('environmentType'), 'dev'), createArray(createObject('tenantId', subscription().tenantId, 'objectId', 'daa3436a-d1fb-44fe-b34b-053db433cdb7', 'permissions', createObject('secrets', createArray('get', 'list', 'set'), 'certificates', createArray('get', 'list')))), if(equals(parameters('environmentType'), 'uat'), createArray(createObject('tenantId', subscription().tenantId, 'objectId', 'daa3436a-d1fb-44fe-b34b-053db433cdb7', 'permissions', createObject('secrets', createArray('get', 'list', 'set'), 'certificates', createArray('get', 'list'))), createObject('tenantId', subscription().tenantId, 'objectId', 'daa3436a-d1fb-44fe-b34b-053db433cdb7', 'permissions', createObject('secrets', createArray('get', 'list'), 'certificates', createArray('get', 'list')))), createArray(createObject('tenantId', subscription().tenantId, 'objectId', 'daa3436a-d1fb-44fe-b34b-053db433cdb7', 'permissions', createObject('secrets', createArray('get', 'list', 'set', 'delete'), 'certificates', createArray('get', 'list', 'set', 'delete'), 'keys', createArray('get', 'list', 'set', 'delete'))))))]"
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2021-07-01-preview",
              "name": "[parameters('keyVaultName')]",
              "location": "[parameters('location')]",
              "properties": {
                "enabledForDeployment": "[parameters('enableVaultForDeployment')]",
                "enableRbacAuthorization": true,
                "enableSoftDelete": true,
                "enabledForTemplateDeployment": true,
                "sku": {
                  "family": "A",
                  "name": "[variables('keyVaultSku')]"
                },
                "tenantId": "[subscription().tenantId]",
                "accessPolicies": "[variables('accessPolicies')]"
              }
            },
            {
              "copy": {
                "name": "keyVault_roleAssignments",
                "count": "[length(coalesce(parameters('roleAssignments'), createArray()))]"
              },
              "type": "Microsoft.Authorizations/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.KeyVault/vaults/{0}', parameters('keyVaultName'))]",
              "name": "[guid(resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName')), coalesce(parameters('roleAssignments'), createArray())[copyIndex()].principalId, coalesce(parameters('roleAssignments'), createArray())[copyIndex()].roleDefinitionIdOrName)]",
              "properties": {
                "roleDefinitionId": "[coalesce(tryGet(variables('builtInRoleNames'), coalesce(parameters('roleAssignments'), createArray())[copyIndex()].roleDefinitionIdOrName), coalesce(parameters('roleAssignments'), createArray())[copyIndex()].roleDefinitionIdOrName)]",
                "principalId": "[coalesce(parameters('roleAssignments'), createArray())[copyIndex()].principalId]",
                "description": "[tryGet(coalesce(parameters('roleAssignments'), createArray())[copyIndex()], 'description')]",
                "condition": "[tryGet(coalesce(parameters('roleAssignments'), createArray())[copyIndex()], 'condition')]",
                "principalType": "[tryGet(coalesce(parameters('roleAssignments'), createArray())[copyIndex()], 'principalType')]",
                "conditionVersion": "[if(not(empty(tryGet(coalesce(parameters('roleAssignments'), createArray())[copyIndex()], 'condition'))), coalesce(tryGet(coalesce(parameters('roleAssignments'), createArray())[copyIndex()], 'conditionVersion'), '2.0'), null())]",
                "delegatedManagedIdentityResourceId": "[tryGet(coalesce(parameters('roleAssignments'), createArray())[copyIndex()], 'delegatedManagedIdentityResourceId')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
              ]
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.KeyVault/vaults/{0}', parameters('keyVaultName'))]",
              "name": "[parameters('diagnosticSettingName')]",
              "properties": {
                "workspaceId": "[parameters('logAnalyticsWorkspaceId')]",
                "logs": [
                  {
                    "category": "AuditEvent",
                    "enabled": true
                  }
                ],
                "metrics": [
                  {
                    "category": "AllMetrics",
                    "enabled": true
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
              ]
            }
          ],
          "outputs": {
            "keyVaultResourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
            },
            "keyVaultName": {
              "type": "string",
              "value": "[parameters('keyVaultName')]"
            },
            "keyVaultUri": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName')), '2021-07-01-preview').vaultUri]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', format('logAnalytics-{0}', parameters('environmentType')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "appService",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "environmentType": {
            "value": "[parameters('environmentType')]"
          },
          "appServiceAppName": {
            "value": "[parameters('appServiceAppName')]"
          },
          "appServiceAPIAppName": {
            "value": "[parameters('appServiceAPIAppName')]"
          },
          "appServicePlanName": {
            "value": "[parameters('appServicePlanName')]"
          },
          "appServiceAPIDBHostDBUSER": {
            "value": "[parameters('appServiceAPIDBHostDBUSER')]"
          },
          "appServiceAPIDBHostFLASK_APP": {
            "value": "[parameters('appServiceAPIDBHostFLASK_APP')]"
          },
          "appServiceAPIDBHostFLASK_DEBUG": {
            "value": "[parameters('appServiceAPIDBHostFLASK_DEBUG')]"
          },
          "appServiceAPIEnvVarDBHOST": {
            "value": "[parameters('appServiceAPIEnvVarDBHOST')]"
          },
          "appServiceAPIEnvVarDBNAME": {
            "value": "[parameters('appServiceAPIEnvVarDBNAME')]"
          },
          "appServiceAPIEnvVarDBPASS": {
            "value": "[parameters('appServiceAPIEnvVarDBPASS')]"
          },
          "appServiceAPIEnvVarENV": {
            "value": "[parameters('appServiceAPIEnvVarENV')]"
          },
          "appInsightsInstrumentationKey": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('appInsights-{0}', parameters('environmentType'))), '2022-09-01').outputs.appInsightsInstrumentationKey.value]"
          },
          "appInsightsConnectionString": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('appInsights-{0}', parameters('environmentType'))), '2022-09-01').outputs.appInsightsConnectionString.value]"
          },
          "keyVaultResourceId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('keyVault-{0}', parameters('environmentType'))), '2022-09-01').outputs.keyVaultResourceId.value]"
          },
          "keyVaultSecretNameAdminUsername": {
            "value": "[parameters('keyVaultSecretNameAdminUsername')]"
          },
          "keyVaultSecretNameAdminPassword0": {
            "value": "[parameters('keyVaultSecretNameAdminPassword0')]"
          },
          "keyVaultSecretNameAdminPassword1": {
            "value": "[parameters('keyVaultSecretNameAdminPassword1')]"
          },
          "postgresSQLServerName": {
            "value": "[parameters('postgresSQLServerName')]"
          },
          "postgresSQLDatabaseName": {
            "value": "[parameters('postgresSQLDatabaseName')]"
          },
          "dockerRegistryImageName": {
            "value": "[parameters('dockerRegistryImageName')]"
          },
          "dockerRegistryImageTag": {
            "value": "[parameters('dockerRegistryImageTag')]"
          },
          "containerRegistryName": {
            "value": "[parameters('containerRegistryName')]"
          },
          "logAnalyticsWorkspaceId": {
            "value": "[variables('logAnalyticsWorkspaceId')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.31.92.45157",
              "templateHash": "13587319155083044814"
            }
          },
          "parameters": {
            "appServicePlanName": {
              "type": "string"
            },
            "appServiceAppName": {
              "type": "string"
            },
            "appServiceAPIAppName": {
              "type": "string"
            },
            "appServiceAPIDBHostFLASK_APP": {
              "type": "string"
            },
            "appServiceAPIEnvVarENV": {
              "type": "string"
            },
            "appServiceAPIDBHostFLASK_DEBUG": {
              "type": "string"
            },
            "appServiceAPIEnvVarDBHOST": {
              "type": "string"
            },
            "appServiceAPIEnvVarDBNAME": {
              "type": "string"
            },
            "appServiceAPIDBHostDBUSER": {
              "type": "string"
            },
            "appServiceAPIEnvVarDBPASS": {
              "type": "securestring"
            },
            "containerRegistryName": {
              "type": "string"
            },
            "dockerRegistryImageName": {
              "type": "string"
            },
            "dockerRegistryImageTag": {
              "type": "string"
            },
            "appInsightsInstrumentationKey": {
              "type": "string"
            },
            "appInsightsConnectionString": {
              "type": "string"
            },
            "postgresSQLServerName": {
              "type": "string"
            },
            "postgresSQLDatabaseName": {
              "type": "string"
            },
            "logAnalyticsWorkspaceId": {
              "type": "string"
            },
            "keyVaultResourceId": {
              "type": "string"
            },
            "keyVaultSecretNameAdminUsername": {
              "type": "string"
            },
            "keyVaultSecretNameAdminPassword0": {
              "type": "string"
            },
            "keyVaultSecretNameAdminPassword1": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "environmentType": {
              "type": "string",
              "allowedValues": [
                "dev",
                "uat",
                "prod"
              ]
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "appServicePlan",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "appServicePlanName": {
                    "value": "[parameters('appServicePlanName')]"
                  },
                  "environmentType": {
                    "value": "[parameters('environmentType')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.31.92.45157",
                      "templateHash": "656282924919031495"
                    }
                  },
                  "parameters": {
                    "appServicePlanName": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "environmentType": {
                      "type": "string",
                      "allowedValues": [
                        "dev",
                        "uat",
                        "prod"
                      ]
                    }
                  },
                  "variables": {
                    "environmentConfig": {
                      "dev": {
                        "sku": "F1",
                        "capacity": 1
                      },
                      "uat": {
                        "sku": "F1",
                        "capacity": 1
                      },
                      "prod": {
                        "sku": "B1",
                        "capacity": 2
                      }
                    },
                    "skuName": "[variables('environmentConfig')[parameters('environmentType')].sku]",
                    "capacity": "[variables('environmentConfig')[parameters('environmentType')].capacity]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Web/serverfarms",
                      "apiVersion": "2021-03-01",
                      "name": "[parameters('appServicePlanName')]",
                      "location": "[parameters('location')]",
                      "sku": {
                        "name": "[variables('skuName')]",
                        "capacity": "[variables('capacity')]"
                      },
                      "kind": "linux",
                      "properties": {
                        "reserved": true
                      }
                    }
                  ],
                  "outputs": {
                    "planId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "containerRegistry",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "environmentType": {
                    "value": "[parameters('environmentType')]"
                  },
                  "registryName": {
                    "value": "[parameters('containerRegistryName')]"
                  },
                  "keyVaultResourceId": {
                    "value": "[parameters('keyVaultResourceId')]"
                  },
                  "keyVaultSecretNameAdminUsername": {
                    "value": "[parameters('keyVaultSecretNameAdminUsername')]"
                  },
                  "keyVaultSecretNameAdminPassword0": {
                    "value": "[parameters('keyVaultSecretNameAdminPassword0')]"
                  },
                  "keyVaultSecretNameAdminPassword1": {
                    "value": "[parameters('keyVaultSecretNameAdminPassword1')]"
                  },
                  "logAnalyticsWorkspaceId": {
                    "value": "[parameters('logAnalyticsWorkspaceId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.31.92.45157",
                      "templateHash": "2316826509889242"
                    }
                  },
                  "parameters": {
                    "registryName": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "environmentType": {
                      "type": "string",
                      "allowedValues": [
                        "dev",
                        "uat",
                        "prod"
                      ]
                    },
                    "enableGeoReplication": {
                      "type": "bool",
                      "defaultValue": "[equals(parameters('environmentType'), 'prod')]"
                    },
                    "keyVaultResourceId": {
                      "type": "string"
                    },
                    "keyVaultSecretNameAdminUsername": {
                      "type": "string"
                    },
                    "keyVaultSecretNameAdminPassword0": {
                      "type": "string"
                    },
                    "keyVaultSecretNameAdminPassword1": {
                      "type": "string"
                    },
                    "containterRegistryDiagnostics": {
                      "type": "string",
                      "defaultValue": "myDiagnosticSetting"
                    },
                    "logAnalyticsWorkspaceId": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "containerRegistrySku": "[if(equals(parameters('environmentType'), 'prod'), 'Standard', 'Basic')]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.ContainerRegistry/registries",
                      "apiVersion": "2023-01-01-preview",
                      "name": "[parameters('registryName')]",
                      "location": "[parameters('location')]",
                      "sku": {
                        "name": "[variables('containerRegistrySku')]"
                      },
                      "properties": {
                        "adminUserEnabled": true,
                        "geoReplication": "[if(parameters('enableGeoReplication'), createObject('regions', createArray('East US', 'West US')), null())]"
                      }
                    },
                    {
                      "type": "Microsoft.KeyVault/vaults/secrets",
                      "apiVersion": "2023-07-01",
                      "name": "[format('{0}/{1}', last(split(parameters('keyVaultResourceId'), '/')), parameters('keyVaultSecretNameAdminUsername'))]",
                      "properties": {
                        "value": "[listCredentials(resourceId('Microsoft.ContainerRegistry/registries', parameters('registryName')), '2023-01-01-preview').username]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.ContainerRegistry/registries', parameters('registryName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.KeyVault/vaults/secrets",
                      "apiVersion": "2023-07-01",
                      "name": "[format('{0}/{1}', last(split(parameters('keyVaultResourceId'), '/')), parameters('keyVaultSecretNameAdminPassword0'))]",
                      "properties": {
                        "value": "[listCredentials(resourceId('Microsoft.ContainerRegistry/registries', parameters('registryName')), '2023-01-01-preview').passwords[0].value]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.ContainerRegistry/registries', parameters('registryName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.KeyVault/vaults/secrets",
                      "apiVersion": "2023-07-01",
                      "name": "[format('{0}/{1}', last(split(parameters('keyVaultResourceId'), '/')), parameters('keyVaultSecretNameAdminPassword1'))]",
                      "properties": {
                        "value": "[listCredentials(resourceId('Microsoft.ContainerRegistry/registries', parameters('registryName')), '2023-01-01-preview').passwords[1].value]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.ContainerRegistry/registries', parameters('registryName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "apiVersion": "2021-05-01-preview",
                      "scope": "[format('Microsoft.ContainerRegistry/registries/{0}', parameters('registryName'))]",
                      "name": "[parameters('containterRegistryDiagnostics')]",
                      "properties": {
                        "workspaceId": "[parameters('logAnalyticsWorkspaceId')]",
                        "metrics": [
                          {
                            "category": "AllMetrics",
                            "enabled": true
                          }
                        ],
                        "logs": [
                          {
                            "category": "ContainerRegistryLoginEvents",
                            "enabled": true
                          },
                          {
                            "category": "ContainerRegistryRepositoryEvents",
                            "enabled": true
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.ContainerRegistry/registries', parameters('registryName'))]"
                      ]
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "backend",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "environmentType": {
                    "value": "[parameters('environmentType')]"
                  },
                  "appServiceAPIAppName": {
                    "value": "[parameters('appServiceAPIAppName')]"
                  },
                  "appServicePlanId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'appServicePlan'), '2022-09-01').outputs.planId.value]"
                  },
                  "containerRegistryName": {
                    "value": "[parameters('containerRegistryName')]"
                  },
                  "dockerRegistryUserName": {
                    "reference": {
                      "keyVault": {
                        "id": "[resourceId('Microsoft.KeyVault/vaults', last(split(parameters('keyVaultResourceId'), '/')))]"
                      },
                      "secretName": "[parameters('keyVaultSecretNameAdminUsername')]"
                    }
                  },
                  "dockerRegistryPassword": {
                    "reference": {
                      "keyVault": {
                        "id": "[resourceId('Microsoft.KeyVault/vaults', last(split(parameters('keyVaultResourceId'), '/')))]"
                      },
                      "secretName": "[parameters('keyVaultSecretNameAdminPassword0')]"
                    }
                  },
                  "dockerRegistryImageName": {
                    "value": "[parameters('dockerRegistryImageName')]"
                  },
                  "dockerRegistryImageTag": {
                    "value": "[parameters('dockerRegistryImageTag')]"
                  },
                  "appSettings": {
                    "value": [
                      {
                        "name": "ENV",
                        "value": "[parameters('appServiceAPIEnvVarENV')]"
                      },
                      {
                        "name": "DBHOST",
                        "value": "[parameters('appServiceAPIEnvVarDBHOST')]"
                      },
                      {
                        "name": "DBNAME",
                        "value": "[parameters('appServiceAPIEnvVarDBNAME')]"
                      },
                      {
                        "name": "DBPASS",
                        "value": "[parameters('appServiceAPIEnvVarDBPASS')]"
                      },
                      {
                        "name": "DBUSER",
                        "value": "[parameters('appServiceAPIDBHostDBUSER')]"
                      },
                      {
                        "name": "FLASK_APP",
                        "value": "[parameters('appServiceAPIDBHostFLASK_APP')]"
                      },
                      {
                        "name": "FLASK_DEBUG",
                        "value": "[parameters('appServiceAPIDBHostFLASK_DEBUG')]"
                      },
                      {
                        "name": "SCM_DO_BUILD_DURING_DEPLOYMENT",
                        "value": "true"
                      },
                      {
                        "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                        "value": "[parameters('appInsightsInstrumentationKey')]"
                      },
                      {
                        "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                        "value": "[parameters('appInsightsConnectionString')]"
                      }
                    ]
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.31.92.45157",
                      "templateHash": "10138189371144524466"
                    }
                  },
                  "parameters": {
                    "appServiceAPIAppName": {
                      "type": "string"
                    },
                    "appServicePlanId": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "containerRegistryName": {
                      "type": "string"
                    },
                    "dockerRegistryImageName": {
                      "type": "string"
                    },
                    "dockerRegistryImageTag": {
                      "type": "string"
                    },
                    "dockerRegistryUserName": {
                      "type": "securestring"
                    },
                    "dockerRegistryPassword": {
                      "type": "securestring"
                    },
                    "appSettings": {
                      "type": "array",
                      "defaultValue": []
                    },
                    "appCommandLine": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "environmentType": {
                      "type": "string",
                      "allowedValues": [
                        "dev",
                        "uat",
                        "prod"
                      ]
                    }
                  },
                  "variables": {
                    "backendConfig": {
                      "dev": {
                        "alwaysOn": false
                      },
                      "uat": {
                        "alwaysOn": false
                      },
                      "prod": {
                        "alwaysOn": true
                      }
                    },
                    "alwaysOnSetting": "[variables('backendConfig')[parameters('environmentType')].alwaysOn]",
                    "dockerAppSettings": [
                      {
                        "name": "DOCKER_REGISTRY_SERVER_URL",
                        "value": "[format('https://{0}.azurecr.io', parameters('containerRegistryName'))]"
                      },
                      {
                        "name": "DOCKER_REGISTRY_SERVER_USERNAME",
                        "value": "[parameters('dockerRegistryUserName')]"
                      },
                      {
                        "name": "DOCKER_REGISTRY_SERVER_PASSWORD",
                        "value": "[parameters('dockerRegistryPassword')]"
                      }
                    ]
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Web/sites",
                      "apiVersion": "2021-02-01",
                      "name": "[parameters('appServiceAPIAppName')]",
                      "location": "[parameters('location')]",
                      "identity": {
                        "type": "SystemAssigned"
                      },
                      "properties": {
                        "serverFarmId": "[parameters('appServicePlanId')]",
                        "httpsOnly": true,
                        "siteConfig": {
                          "linuxFxVersion": "[format('DOCKER|{0}.azurecr.io/{1}:{2}', parameters('containerRegistryName'), parameters('dockerRegistryImageName'), parameters('dockerRegistryImageTag'))]",
                          "alwaysOn": "[variables('alwaysOnSetting')]",
                          "ftpsState": "FtpsOnly",
                          "appSettings": "[union(parameters('appSettings'), variables('dockerAppSettings'))]",
                          "appCommandLine": "[parameters('appCommandLine')]"
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "systemAssignedIdentityPrincipalId": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Web/sites', parameters('appServiceAPIAppName')), '2021-02-01', 'full').identity.principalId]"
                    },
                    "appServiceAppHostName": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Web/sites', parameters('appServiceAPIAppName')), '2021-02-01').defaultHostName]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'appServicePlan')]",
                "[resourceId('Microsoft.Resources/deployments', 'containerRegistry')]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "frontendAppService",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "appServiceAppName": {
                    "value": "[parameters('appServiceAppName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "appServicePlanId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'appServicePlan'), '2022-09-01').outputs.planId.value]"
                  },
                  "appInsightsInstrumentationKey": {
                    "value": "[parameters('appInsightsInstrumentationKey')]"
                  },
                  "appInsightsConnectionString": {
                    "value": "[parameters('appInsightsConnectionString')]"
                  },
                  "environmentType": {
                    "value": "[parameters('environmentType')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.31.92.45157",
                      "templateHash": "13746132929113715579"
                    }
                  },
                  "parameters": {
                    "appServiceAppName": {
                      "type": "string"
                    },
                    "appServicePlanId": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "appInsightsInstrumentationKey": {
                      "type": "string"
                    },
                    "appInsightsConnectionString": {
                      "type": "string"
                    },
                    "environmentType": {
                      "type": "string",
                      "allowedValues": [
                        "dev",
                        "uat",
                        "prod"
                      ]
                    }
                  },
                  "variables": {
                    "frontendConfig": {
                      "dev": {
                        "alwaysOn": false
                      },
                      "uat": {
                        "alwaysOn": false
                      },
                      "prod": {
                        "alwaysOn": true
                      }
                    },
                    "alwaysOnSetting": "[variables('frontendConfig')[parameters('environmentType')].alwaysOn]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Web/sites",
                      "apiVersion": "2021-03-01",
                      "name": "[parameters('appServiceAppName')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "serverFarmId": "[parameters('appServicePlanId')]",
                        "httpsOnly": true,
                        "siteConfig": {
                          "linuxFxVersion": "NODE|18-lts",
                          "alwaysOn": "[variables('alwaysOnSetting')]",
                          "ftpsState": "FtpsOnly",
                          "appCommandLine": "pm2 serve /home/site/wwroot --spa --no-daemon",
                          "appSettings": [
                            {
                              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                              "value": "[parameters('appInsightsInstrumentationKey')]"
                            },
                            {
                              "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                              "value": "[parameters('appInsightsConnectionString')]"
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "serviceAppHostName": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Web/sites', parameters('appServiceAppName')), '2021-03-01').defaultHostName]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'appServicePlan')]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "applicationDatabase",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "environmentType": {
                    "value": "[parameters('environmentType')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "postgresSQLServerName": {
                    "value": "[parameters('postgresSQLServerName')]"
                  },
                  "postgresSQLDatabaseName": {
                    "value": "[parameters('postgresSQLDatabaseName')]"
                  },
                  "postgreSQLAdminServicePrincipalObjectId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'backend'), '2022-09-01').outputs.systemAssignedIdentityPrincipalId.value]"
                  },
                  "postgreSQLAdminServicePrincipalName": {
                    "value": "[parameters('appServiceAPIAppName')]"
                  },
                  "logAnalyticsWorkspaceId": {
                    "value": "[parameters('logAnalyticsWorkspaceId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.31.92.45157",
                      "templateHash": "10202019583508252822"
                    }
                  },
                  "parameters": {
                    "postgresSQLServerName": {
                      "type": "string"
                    },
                    "postgresSQLDatabaseName": {
                      "type": "string"
                    },
                    "postgreSQLAdminServicePrincipalObjectId": {
                      "type": "string"
                    },
                    "postgreSQLAdminServicePrincipalName": {
                      "type": "string"
                    },
                    "logAnalyticsWorkspaceId": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "environmentType": {
                      "type": "string",
                      "allowedValues": [
                        "dev",
                        "uat",
                        "prod"
                      ]
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "postgresSQLServer",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "environmentType": {
                            "value": "[parameters('environmentType')]"
                          },
                          "postgresSQLServerName": {
                            "value": "[parameters('postgresSQLServerName')]"
                          },
                          "postgresSQLAdminServerPrincipalObjectId": {
                            "value": "[parameters('postgreSQLAdminServicePrincipalObjectId')]"
                          },
                          "postgresSQLAdminServerPrincipalName": {
                            "value": "[parameters('postgreSQLAdminServicePrincipalName')]"
                          },
                          "logAnalyticsWorkspaceId": {
                            "value": "[parameters('logAnalyticsWorkspaceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.31.92.45157",
                              "templateHash": "1099969269071943450"
                            }
                          },
                          "parameters": {
                            "environmentType": {
                              "type": "string",
                              "allowedValues": [
                                "dev",
                                "uat",
                                "prod"
                              ]
                            },
                            "location": {
                              "type": "string",
                              "defaultValue": "[resourceGroup().location]"
                            },
                            "postgresSQLServerName": {
                              "type": "string",
                              "defaultValue": "ie-bank-db-server-dev"
                            },
                            "postgresSQLAdminServerPrincipalName": {
                              "type": "string"
                            },
                            "postgresSQLAdminServerPrincipalObjectId": {
                              "type": "string"
                            },
                            "logAnalyticsWorkspaceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "skuName": "[if(equals(parameters('environmentType'), 'prod'), 'Standard_B1ms', if(equals(parameters('environmentType'), 'uat'), 'Standard_B1ms', 'Standard_B1ms'))]",
                            "backupRetentionDays": "[if(equals(parameters('environmentType'), 'prod'), 14, if(equals(parameters('environmentType'), 'uat'), 7, 3))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.DBforPostgreSQL/flexibleServers/firewallRules",
                              "apiVersion": "2022-12-01",
                              "name": "[format('{0}/{1}', parameters('postgresSQLServerName'), 'AllowAllAzureServices')]",
                              "properties": {
                                "startIpAddress": "0.0.0.0",
                                "endIpAddress": "0.0.0.0"
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('postgresSQLServerName'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.DBforPostgreSQL/flexibleServers/administrators",
                              "apiVersion": "2022-12-01",
                              "name": "[format('{0}/{1}', parameters('postgresSQLServerName'), parameters('postgresSQLAdminServerPrincipalObjectId'))]",
                              "properties": {
                                "principalName": "[parameters('postgresSQLAdminServerPrincipalName')]",
                                "principalType": "ServicePrincipal",
                                "tenantId": "[subscription().tenantId]"
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('postgresSQLServerName'))]",
                                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers/firewallRules', parameters('postgresSQLServerName'), 'AllowAllAzureServices')]"
                              ]
                            },
                            {
                              "type": "Microsoft.DBforPostgreSQL/flexibleServers",
                              "apiVersion": "2022-12-01",
                              "name": "[parameters('postgresSQLServerName')]",
                              "location": "[parameters('location')]",
                              "sku": {
                                "name": "[variables('skuName')]",
                                "tier": "Burstable"
                              },
                              "properties": {
                                "administratorLogin": "iebankdbadmin",
                                "administratorLoginPassword": "IE.Bank.DB.Admin.Pa$$",
                                "version": "15",
                                "createMode": "Default",
                                "authConfig": {
                                  "activeDirectoryAuth": "Enabled",
                                  "passwordAuth": "Enabled",
                                  "tenantId": "[subscription().tenantId]"
                                },
                                "storage": {
                                  "storageSizeGB": 32
                                },
                                "backup": {
                                  "backupRetentionDays": "[variables('backupRetentionDays')]",
                                  "geoRedundantBackup": "[if(equals(parameters('environmentType'), 'prod'), 'Enabled', 'Disabled')]"
                                },
                                "highAvailability": {
                                  "mode": "Disabled",
                                  "standbyAvailabilityZone": ""
                                }
                              }
                            },
                            {
                              "type": "Microsoft.Insights/diagnosticSettings",
                              "apiVersion": "2021-05-01-preview",
                              "scope": "[format('Microsoft.DBforPostgreSQL/flexibleServers/{0}', parameters('postgresSQLServerName'))]",
                              "name": "PostGresSQLServerDiagnostics",
                              "properties": {
                                "workspaceId": "[parameters('logAnalyticsWorkspaceId')]",
                                "logs": [
                                  {
                                    "category": "PostgreSQLFlexSessions",
                                    "enabled": true
                                  },
                                  {
                                    "category": "PostgreSQLFlexQueryStoreRuntime",
                                    "enabled": true
                                  },
                                  {
                                    "category": "PostgreSQLFlexTableStats",
                                    "enabled": true
                                  },
                                  {
                                    "category": "PostgreSQLFlexQueryStoreWaitStats",
                                    "enabled": true
                                  },
                                  {
                                    "category": "PostgreSQLLogs",
                                    "enabled": true
                                  },
                                  {
                                    "category": "PostgreSQLFlexDatabaseXacts",
                                    "enabled": true
                                  }
                                ],
                                "metrics": [
                                  {
                                    "category": "AllMetrics",
                                    "enabled": true
                                  }
                                ]
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('postgresSQLServerName'))]"
                              ]
                            }
                          ],
                          "outputs": {
                            "postgresSQLServerName": {
                              "type": "string",
                              "value": "[parameters('postgresSQLServerName')]"
                            },
                            "resourceOutput": {
                              "type": "object",
                              "value": "[reference(resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('postgresSQLServerName')), '2022-12-01', 'full')]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "postgresSQLDatabase",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "postgresSQLServerName": {
                            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'postgresSQLServer'), '2022-09-01').outputs.postgresSQLServerName.value]"
                          },
                          "postgresSQLDatabaseName": {
                            "value": "[parameters('postgresSQLDatabaseName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.31.92.45157",
                              "templateHash": "1681540710604982217"
                            }
                          },
                          "parameters": {
                            "postgresSQLDatabaseName": {
                              "type": "string"
                            },
                            "postgresSQLServerName": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.DBforPostgreSQL/flexibleServers/databases",
                              "apiVersion": "2022-12-01",
                              "name": "[format('{0}/{1}', parameters('postgresSQLServerName'), parameters('postgresSQLDatabaseName'))]",
                              "properties": {
                                "charset": "UTF8",
                                "collation": "en_US.UTF8"
                              }
                            }
                          ],
                          "outputs": {
                            "postgresSQLDatabaseName": {
                              "type": "string",
                              "value": "[parameters('postgresSQLDatabaseName')]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Resources/deployments', 'postgresSQLServer')]"
                      ]
                    }
                  ],
                  "outputs": {
                    "postgresSQLServerName": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'postgresSQLServer'), '2022-09-01').outputs.postgresSQLServerName.value]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'backend')]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', format('appInsights-{0}', parameters('environmentType')))]",
        "[resourceId('Microsoft.Resources/deployments', format('keyVault-{0}', parameters('environmentType')))]"
      ]
    }
  ],
  "outputs": {
    "appInsightsInstrumentationKey": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('appInsights-{0}', parameters('environmentType'))), '2022-09-01').outputs.appInsightsInstrumentationKey.value]"
    },
    "appInsightsConnectionString": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('appInsights-{0}', parameters('environmentType'))), '2022-09-01').outputs.appInsightsConnectionString.value]"
    },
    "logAnalyticsWorkspaceId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('logAnalytics-{0}', parameters('environmentType'))), '2022-09-01').outputs.workspaceId.value]"
    },
    "logAnalyticsWorkspaceName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('logAnalytics-{0}', parameters('environmentType'))), '2022-09-01').outputs.logAnalyticsWorkspaceName.value]"
    }
  }
}