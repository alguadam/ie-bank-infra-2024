name: ie-bank-infra

on:
  workflow_dispatch:
  push:
      branches: 
        - '*'
      paths-ignore:
        - 'scripts/**'
  pull_request:
    branches: 
        - "main" 

env:
  RESOURCE_GROUP_DEV: BCSAI2024-DEVOPS-STUDENTS-B-DEV
  RESOURCE_GROUP_UAT: BCSAI2024-DEVOPS-STUDENTS-B-UAT
  RESOURCE_GROUP_PROD: BCSAI2024-DEVOPS-STUDENTS-B-PROD
  SUBSCRIPTION_ID_DEV: e0b9cada-61bc-4b5a-bd7a-52c606726b3b
  USER_ALIAS: apayne

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout code
    - uses: actions/checkout@v3

      # Lint Bicep code 
    - name: Run Bicep linter
      run: az bicep build --file ./main.bicep --only-show-errors --output json

      # unit tests for bicep files (you may need to define a script for this if it's custom testing)
    - name: Run Bicep unit tests
      run: |
        chmod +x ./test-bicep.sh  
        ./test-bicep.sh  

    - name: run checkov scan
      uses: bridgecrewio/checkov-action@master
      with:
        directory: './'
        file: 'main.bicep'
      continue-on-error: true

    - name: upload bicep build artifact
      uses: actions/upload-artifact@v4
      with:
        name: bicep-build
        path: ./main.bicep
      


  deploy-dev:
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'

    steps:
      # Checkout code
    - uses: actions/checkout@v3
    
      # Log into Azure
    - uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Deploy Bicep file
    - name: deploy to azure using bicep
      uses: azure/arm-deploy@v1
      with:
        subscriptionId: ${{ env.SUBSCRIPTION_ID_DEV }}
        resourceGroupName: ${{ env.RESOURCE_GROUP_DEV }}
        template: ./main.bicep
        parameters: ./parameters/dev.parameters.json appServiceAPIEnvVarENV=${{ vars.ENV }} appServiceAPIEnvVarDBHOST=${{ vars.DBHOST }} appServiceAPIEnvVarDBNAME=${{ vars.DBNAME }} appServiceAPIEnvVarDBPASS=${{ secrets.DBPASS }} appServiceAPIDBHostDBUSER=${{ secrets.DBUSER }} appServiceAPIDBHostFLASK_APP=${{ vars.FLASK_APP }} appServiceAPIDBHostFLASK_DEBUG=${{ vars.FLASK_DEBUG }}
        deploymentName: ${{ env.USER_ALIAS }}
        failOnStdErr: false


  deploy-uat:
    if: github.event_name == 'workflow_dispatch' || github.event.pull_request.base.ref == 'main'
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'UAT'
    
    steps:
          # Checkout code
    - uses: actions/checkout@v3
    - name: download bicep build artifact
      uses: actions/download-artifact@v4
      with:
        name: bicep-build
        
          # Log into Azure
    - uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
          # Deploy Bicep file
    - name: deploy to uat
      uses: azure/arm-deploy@v2
      with:
        subscriptionId: ${{ env.SUBSCRIPTION_ID_DEV }}
        resourceGroupName: ${{ env.RESOURCE_GROUP_UAT }}
        template: ./main.bicep
        parameters: ./parameters/uat.parameters.json appServiceAPIEnvVarENV=${{ vars.ENV }} appServiceAPIEnvVarDBHOST=${{ vars.DBHOST }} appServiceAPIEnvVarDBNAME=${{ vars.DBNAME }} appServiceAPIEnvVarDBPASS=${{ secrets.DBPASS }} appServiceAPIDBHostDBUSER=${{ secrets.DBUSER }} appServiceAPIDBHostFLASK_APP=${{ vars.FLASK_APP }} appServiceAPIDBHostFLASK_DEBUG=${{ vars.FLASK_DEBUG }}
        deploymentName: ${{ env.USER_ALIAS }}-uat
        failOnStdErr: false

        

  deploy-prod:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: deploy-uat
    environment:
      name: 'Production'

    steps: 
    - uses: actions/checkout@v3
    - name: download bicep build artifact
      uses: actions/download-artifact@v4
      with: 
        name: bicep-build

    - uses: azure/login@v2
      with: 
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: deploy to prod
      uses: azure/arm-deploy@v2
      with:
        subscriptionId: ${{ env.SUBSCRIPTION_ID_DEV }}
        resourceGroupName: ${{ env.RESOURCE_GROUP_PROD }}
        template: ./main.bicep
        parameters: ./parameters/prod.parameters.json appServiceAPIEnvVarENV=${{ vars.ENV }} appServiceAPIEnvVarDBHOST=${{ vars.DBHOST }} appServiceAPIEnvVarDBNAME=${{ vars.DBNAME }} appServiceAPIEnvVarDBPASS=${{ secrets.DBPASS }} appServiceAPIDBHostDBUSER=${{ secrets.DBUSER }} appServiceAPIDBHostFLASK_APP=${{ vars.FLASK_APP }} appServiceAPIDBHostFLASK_DEBUG=${{ vars.FLASK_DEBUG }}
        deploymentName: ${{ env.USER_ALIAS }}-prod
        failOnStdErr: false


